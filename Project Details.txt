I have worked on another project. 
This project is a Multi-tier application on AWS. I have a Java-based application that I want to be highly scalable and available. To follow along I have uploaded the project source code on my github repository (https://github.com/captaindeedat/Multi-Tier-App). I came about the project from a udemy course I purchased from Imram Teli (https://www.udemy.com/course/devopsprojects/), the architecture is from this YouTube video (https://www.youtube.com/watch?v=6SGeESPJSQo).
To get started, I would go to AWS to start the networking. I would create a new VPC in any of my preferred Region, then create the Subnets, Route Table and subnet association, Internet gateway and the Nat Gateway. Then I would proceed to create the security groups. Security group for the web (load balancer and the bastion host), for the application instances, and the database layers (RDS and Elastic cache). It is necessary to open the required ports, with the app layer allowing access to the web and the database layers allowing access to the application.
After that, I would proceed with creating of the database. I would create the subnet group and parameter groups. Then I would provision the RDS using MYSQL (specific to my application). Then the next step would be to take note of the endpoint, then I would connect to the RDS to create a new database and then I would execute the MYSQL statements from a file. Then I would create the Elastic cache, while taking note of the endpoints and password used during creation. 
Now, for the application, I would edit the application properties file (src/main/resources) to include the endpoints of my database. I have a shell script that contains the commands to provision the application on an Ubuntu Instance. Basically, the script installs java-jdk, maven, and tomcat which are our dependencies. Maven to build the application and Tomcat for our web server. The actual source code for the project is on my github repository so it can be forked and edited to include the database endpoints. The application should be provisioned in the correct subnet and security group. 
The next step would be to create the Load balancer, for this, we would need to first create a target group, it is very important to allow port 8080 as this is what Tomcat listens on. Then create an SNS topic and attach an email subscription to it. After that we would proceed with the auth scaling group, we would need to first create a snapshot from our application and a launch template. While creating the Auto Scaling group, it should be behind a load balancer and the SNS topic attached to it. 
Then we head to Route 53 to add a record for our load balancer. 
